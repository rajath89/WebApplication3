using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Xml.Linq;

namespace WebApplication3
{
    //------------------------------------------------------------------------------
    // <auto-generated>
    //     This code was generated by a tool.
    //     Runtime Version:4.0.30319.42000
    //
    //     Changes to this file may cause incorrect behavior and will be lost if
    //     the code is regenerated.
    // </auto-generated>
    //------------------------------------------------------------------------------



    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace = "http://www.webserviceX.NET", ConfigurationName = "GlobalWeatherSoap")]
    public interface GlobalWeatherSoap
    {

        // CODEGEN: Generating message contract since element name CityName from namespace http://www.webserviceX.NET is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action = "http://www.webserviceX.NET/GetWeather", ReplyAction = "*")]
        GetWeatherResponse GetWeather(GetWeatherRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://www.webserviceX.NET/GetWeather", ReplyAction = "*")]
        System.Threading.Tasks.Task<GetWeatherResponse> GetWeatherAsync(GetWeatherRequest request);

        // CODEGEN: Generating message contract since element name CountryName from namespace http://www.webserviceX.NET is not marked nillable
        [System.ServiceModel.OperationContractAttribute(Action = "http://www.webserviceX.NET/GetCitiesByCountry", ReplyAction = "*")]
        GetCitiesByCountryResponse GetCitiesByCountry(GetCitiesByCountryRequest request);

        [System.ServiceModel.OperationContractAttribute(Action = "http://www.webserviceX.NET/GetCitiesByCountry", ReplyAction = "*")]
        System.Threading.Tasks.Task<GetCitiesByCountryResponse> GetCitiesByCountryAsync(GetCitiesByCountryRequest request);
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class GetWeatherRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetWeather", Namespace = "http://www.webserviceX.NET", Order = 0)]
        public GetWeatherRequestBody Body;

        public GetWeatherRequest()
        {
        }

        public GetWeatherRequest(GetWeatherRequestBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.webserviceX.NET")]
    public partial class GetWeatherRequestBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public string CityName;

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 1)]
        public string CountryName;

        public GetWeatherRequestBody()
        {
        }

        public GetWeatherRequestBody(string CityName, string CountryName)
        {
            this.CityName = CityName;
            this.CountryName = CountryName;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class GetWeatherResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetWeatherResponse", Namespace = "http://www.webserviceX.NET", Order = 0)]
        public GetWeatherResponseBody Body;

        public GetWeatherResponse()
        {
        }

        public GetWeatherResponse(GetWeatherResponseBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.webserviceX.NET")]
    public partial class GetWeatherResponseBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public string GetWeatherResult;

        public GetWeatherResponseBody()
        {
        }

        public GetWeatherResponseBody(string GetWeatherResult)
        {
            this.GetWeatherResult = GetWeatherResult;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class GetCitiesByCountryRequest
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetCitiesByCountry", Namespace = "http://www.webserviceX.NET", Order = 0)]
        public GetCitiesByCountryRequestBody Body;

        public GetCitiesByCountryRequest()
        {
        }

        public GetCitiesByCountryRequest(GetCitiesByCountryRequestBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.webserviceX.NET")]
    public partial class GetCitiesByCountryRequestBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public string CountryName;

        public GetCitiesByCountryRequestBody()
        {
        }

        public GetCitiesByCountryRequestBody(string CountryName)
        {
            this.CountryName = CountryName;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped = false)]
    public partial class GetCitiesByCountryResponse
    {

        [System.ServiceModel.MessageBodyMemberAttribute(Name = "GetCitiesByCountryResponse", Namespace = "http://www.webserviceX.NET", Order = 0)]
        public GetCitiesByCountryResponseBody Body;

        public GetCitiesByCountryResponse()
        {
        }

        public GetCitiesByCountryResponse(GetCitiesByCountryResponseBody Body)
        {
            this.Body = Body;
        }
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.Runtime.Serialization.DataContractAttribute(Namespace = "http://www.webserviceX.NET")]
    public partial class GetCitiesByCountryResponseBody
    {

        [System.Runtime.Serialization.DataMemberAttribute(EmitDefaultValue = false, Order = 0)]
        public string GetCitiesByCountryResult;

        public GetCitiesByCountryResponseBody()
        {
        }

        public GetCitiesByCountryResponseBody(string GetCitiesByCountryResult)
        {
            this.GetCitiesByCountryResult = GetCitiesByCountryResult;
        }
    }

    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface GlobalWeatherSoapChannel : GlobalWeatherSoap, System.ServiceModel.IClientChannel
    {
    }

    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GlobalWeatherSoapClient : System.ServiceModel.ClientBase<GlobalWeatherSoap>, GlobalWeatherSoap
    {

        public GlobalWeatherSoapClient()
        {
        }

        public GlobalWeatherSoapClient(string endpointConfigurationName) :
                base(endpointConfigurationName)
        {
        }

        public GlobalWeatherSoapClient(string endpointConfigurationName, string remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public GlobalWeatherSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) :
                base(endpointConfigurationName, remoteAddress)
        {
        }

        public GlobalWeatherSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) :
                base(binding, remoteAddress)
        {
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetWeatherResponse GlobalWeatherSoap.GetWeather(GetWeatherRequest request)
        {
            return base.Channel.GetWeather(request);
        }

        public string GetWeather(string CityName, string CountryName)
        {
            GetWeatherRequest inValue = new GetWeatherRequest();
            inValue.Body = new GetWeatherRequestBody();
            inValue.Body.CityName = CityName;
            inValue.Body.CountryName = CountryName;
            GetWeatherResponse retVal = ((GlobalWeatherSoap)(this)).GetWeather(inValue);
            return retVal.Body.GetWeatherResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetWeatherResponse> GlobalWeatherSoap.GetWeatherAsync(GetWeatherRequest request)
        {
            return base.Channel.GetWeatherAsync(request);
        }

        public System.Threading.Tasks.Task<GetWeatherResponse> GetWeatherAsync(string CityName, string CountryName)
        {
            GetWeatherRequest inValue = new GetWeatherRequest();
            inValue.Body = new GetWeatherRequestBody();
            inValue.Body.CityName = CityName;
            inValue.Body.CountryName = CountryName;
            return ((GlobalWeatherSoap)(this)).GetWeatherAsync(inValue);
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        GetCitiesByCountryResponse GlobalWeatherSoap.GetCitiesByCountry(GetCitiesByCountryRequest request)
        {
            return base.Channel.GetCitiesByCountry(request);
        }

        public string GetCitiesByCountry(string CountryName)
        {
            GetCitiesByCountryRequest inValue = new GetCitiesByCountryRequest();
            inValue.Body = new GetCitiesByCountryRequestBody();
            inValue.Body.CountryName = CountryName;
            GetCitiesByCountryResponse retVal = ((GlobalWeatherSoap)(this)).GetCitiesByCountry(inValue);
            return retVal.Body.GetCitiesByCountryResult;
        }

        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<GetCitiesByCountryResponse> GlobalWeatherSoap.GetCitiesByCountryAsync(GetCitiesByCountryRequest request)
        {
            return base.Channel.GetCitiesByCountryAsync(request);
        }

        public System.Threading.Tasks.Task<GetCitiesByCountryResponse> GetCitiesByCountryAsync(string CountryName)
        {
            GetCitiesByCountryRequest inValue = new GetCitiesByCountryRequest();
            inValue.Body = new GetCitiesByCountryRequestBody();
            inValue.Body.CountryName = CountryName;
            return ((GlobalWeatherSoap)(this)).GetCitiesByCountryAsync(inValue);
        }
    }

}
